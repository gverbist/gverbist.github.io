<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Bist.be</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Recent content in Linux on Bist.be</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2024 Bist.be</copyright>
    <lastBuildDate>Thu, 09 Jan 2025 07:45:20 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unclutter on wayland</title>
      <link>http://localhost:1313/posts/unclutterwayland/</link>
      <pubDate>Thu, 09 Jan 2025 07:45:20 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/unclutterwayland/</guid>
      <description>&lt;h1 id=&#34;unclutter-for-wayland&#34;&gt;Unclutter for Wayland&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;Unclutter, which is commonly used to hide the mouse cursor on X11, does not work under Wayland. However, there are alternatives available for Wayland environments.&lt;/p&gt;
&lt;p&gt;For GNOME on Wayland, you can use the “Hide Cursor” GNOME extension, which is available via the GNOME “Extension Manager.” This extension allows you to hide the mouse pointer after a period of inactivity.&lt;/p&gt;
&lt;p&gt;Additionally, for other Wayland compositors, such as Sway, you can add the following lines to your configuration file to hide the cursor after a period of mouse inactivity:&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;unclutter-for-wayland&#34;&gt;Unclutter for Wayland&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;Unclutter, which is commonly used to hide the mouse cursor on X11, does not work under Wayland. However, there are alternatives available for Wayland environments.&lt;/p&gt;
&lt;p&gt;For GNOME on Wayland, you can use the “Hide Cursor” GNOME extension, which is available via the GNOME “Extension Manager.” This extension allows you to hide the mouse pointer after a period of inactivity.&lt;/p&gt;
&lt;p&gt;Additionally, for other Wayland compositors, such as Sway, you can add the following lines to your configuration file to hide the cursor after a period of mouse inactivity:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;seat seat0 hide_cursor 3000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The number “3000” refers to the number of milliseconds, which translates to 3 seconds in this case. This method is similar to what unclutter would do on an X11 environment.&lt;/p&gt;
&lt;p&gt;Enjoy a clutter free desktop&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Asciiqarium - How To</title>
      <link>http://localhost:1313/posts/asciiqarium/</link>
      <pubDate>Tue, 07 Jan 2025 16:55:52 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/asciiqarium/</guid>
      <description>&lt;h1 id=&#34;how-to-install-asciiquarium-on-arch-linux-using-pacman&#34;&gt;How to Install Asciiquarium on Arch Linux Using &lt;code&gt;pacman&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Asciiquarium&lt;/strong&gt;, a whimsical ASCII-art aquarium, is a fun addition to your terminal. Featuring swimming fish, sharks, submarines, and other sea creatures, it’s a lightweight and entertaining way to add personality to your Linux environment.&lt;/p&gt;
&lt;p&gt;Good news for Arch Linux users: Asciiquarium is available in the official repositories, so you can install it directly using &lt;code&gt;pacman&lt;/code&gt;. Here&amp;rsquo;s how to do it step-by-step.&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;how-to-install-asciiquarium-on-arch-linux-using-pacman&#34;&gt;How to Install Asciiquarium on Arch Linux Using &lt;code&gt;pacman&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Asciiquarium&lt;/strong&gt;, a whimsical ASCII-art aquarium, is a fun addition to your terminal. Featuring swimming fish, sharks, submarines, and other sea creatures, it’s a lightweight and entertaining way to add personality to your Linux environment.&lt;/p&gt;
&lt;p&gt;Good news for Arch Linux users: Asciiquarium is available in the official repositories, so you can install it directly using &lt;code&gt;pacman&lt;/code&gt;. Here&amp;rsquo;s how to do it step-by-step.&lt;/p&gt;
&lt;h2 id=&#34;httpsarchlinuxorgpackagesextraanyasciiquarium&#34;&gt;&lt;a href=&#34;https://archlinux.org/packages/extra/any/asciiquarium/&#34;&gt;https://archlinux.org/packages/extra/any/asciiquarium/&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;step-1-update-your-system&#34;&gt;Step 1: Update Your System&lt;/h2&gt;
&lt;p&gt;Before installing any new packages, ensure your system is up to date. Open your terminal and run:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sudo pacman -Syu&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This updates your system and fetches the latest package information.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-install-asciiquarium-and-its-dependencies&#34;&gt;Step 2: Install Asciiquarium and Its Dependencies&lt;/h2&gt;
&lt;p&gt;Asciiquarium requires the following dependencies, which are automatically managed by &lt;code&gt;pacman&lt;/code&gt; during installation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;perl&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;perl-term-animation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To install Asciiquarium, simply run:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sudo pacman -S asciiquarium&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When prompted, confirm the installation of Asciiquarium and its dependencies.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-3-verify-installation&#34;&gt;Step 3: Verify Installation&lt;/h2&gt;
&lt;p&gt;Once the installation is complete, you can verify that Asciiquarium is working by running:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;asciiquarium&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If everything is set up correctly, you’ll see a charming ASCII-art aquarium animate across your terminal screen.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-4-customize-your-experience&#34;&gt;Step 4: Customize Your Experience&lt;/h2&gt;
&lt;p&gt;Here are a few tips to enhance your Asciiquarium experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resize Your Terminal&lt;/strong&gt;: Adjust your terminal size to change the display of the aquarium.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exit the Aquarium&lt;/strong&gt;: To stop the animation, press &lt;strong&gt;Ctrl+C&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Installing Asciiquarium on Arch Linux is straightforward thanks to its inclusion in the official repositories. With just a few simple commands, you can bring this quirky and entertaining ASCII aquarium to life on your terminal.&lt;/p&gt;
&lt;p&gt;Enjoy the tranquil underwater vibes of Asciiquarium! If you have any questions or fun customizations to share, drop them in the comments below. Happy Linuxing!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Configuring SSH on your CISCO Switch</title>
      <link>http://localhost:1313/posts/sshcisco/</link>
      <pubDate>Tue, 03 Dec 2024 20:47:57 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/sshcisco/</guid>
      <description>&lt;h1 id=&#34;configuring-ssh-on-a-cisco-2960-switch&#34;&gt;Configuring SSH on a Cisco 2960 Switch&lt;/h1&gt;
&lt;p&gt;Configuring Secure Shell (SSH) on a Cisco Catalyst 2960 switch enhances security by encrypting remote administrative access, effectively replacing less secure protocols like Telnet. This guide provides a step-by-step approach to setting up SSH on your Cisco 2960 switch.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before configuring SSH, ensure the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User Authentication&lt;/strong&gt;: Configure user authentication for local or remote access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hostname and Domain Name&lt;/strong&gt;: Assign a unique hostname and domain name to the switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSA Key Pair&lt;/strong&gt;: Generate an RSA key pair for encryption purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;configuration-steps&#34;&gt;Configuration Steps&lt;/h2&gt;
&lt;h3 id=&#34;1-access-the-switch&#34;&gt;1. Access the Switch&lt;/h3&gt;
&lt;p&gt;Connect to the switch using a console cable and access the command-line interface (CLI).&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;configuring-ssh-on-a-cisco-2960-switch&#34;&gt;Configuring SSH on a Cisco 2960 Switch&lt;/h1&gt;
&lt;p&gt;Configuring Secure Shell (SSH) on a Cisco Catalyst 2960 switch enhances security by encrypting remote administrative access, effectively replacing less secure protocols like Telnet. This guide provides a step-by-step approach to setting up SSH on your Cisco 2960 switch.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before configuring SSH, ensure the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User Authentication&lt;/strong&gt;: Configure user authentication for local or remote access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hostname and Domain Name&lt;/strong&gt;: Assign a unique hostname and domain name to the switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSA Key Pair&lt;/strong&gt;: Generate an RSA key pair for encryption purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;configuration-steps&#34;&gt;Configuration Steps&lt;/h2&gt;
&lt;h3 id=&#34;1-access-the-switch&#34;&gt;1. Access the Switch&lt;/h3&gt;
&lt;p&gt;Connect to the switch using a console cable and access the command-line interface (CLI).&lt;/p&gt;
&lt;h3 id=&#34;2-enter-global-configuration-mode&#34;&gt;2. Enter Global Configuration Mode&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enable
configure terminal
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3-set-the-hostname&#34;&gt;3. Set the Hostname&lt;/h2&gt;
&lt;p&gt;Assign a unique hostname to identify the switch:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hostname [Your_Switch_Name]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;4-configure-the-domain-name&#34;&gt;4. Configure the Domain Name&lt;/h2&gt;
&lt;p&gt;Set the domain name for the switch:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip domain-name [your_domain.com]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-generate-the-rsa-key-pair&#34;&gt;5. Generate the RSA Key Pair&lt;/h2&gt;
&lt;p&gt;Create the RSA keys necessary for SSH encryption:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;crypto key generate rsa
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When prompted, specify a modulus size of at least 1024 bits for enhanced security.&lt;/p&gt;
&lt;h2 id=&#34;6-configure-user-authentication&#34;&gt;6. Configure User Authentication&lt;/h2&gt;
&lt;p&gt;Define a local user account with a secure password:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;username [admin] privilege 15 secret [Your_Strong_Password]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;7-enable-ssh-on-virtual-terminal-vty-lines&#34;&gt;7. Enable SSH on Virtual Terminal (VTY) Lines&lt;/h2&gt;
&lt;p&gt;Restrict VTY lines to accept only SSH connections:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;line vty 0 15
transport input ssh
login local
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;8-specify-the-ssh-version&#34;&gt;8. Specify the SSH Version&lt;/h2&gt;
&lt;p&gt;Configure the switch to use SSH version 2 for better security:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip ssh version 2
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;9-set-ssh-parameters-optional&#34;&gt;9. Set SSH Parameters (Optional)&lt;/h2&gt;
&lt;p&gt;Adjust SSH timeouts and authentication retries as needed:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip ssh timeout [120]
ip ssh authentication-retries [3]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;10-save-the-configuration&#34;&gt;10. Save the Configuration&lt;/h2&gt;
&lt;p&gt;Ensure all settings are saved to the startup configuration:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;copy running-config startup-config
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;verification&#34;&gt;Verification&lt;/h3&gt;
&lt;p&gt;To confirm that SSH is configured correctly:&lt;/p&gt;
&lt;p&gt;Check SSH Status:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;show ip ssh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You were probably thinking this is it. And this is where all guides end the configuration. But there is more!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOW YOU NEED TO CONFIGURE YOUR SSH CLIENT!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;11-resolving-ssh-authentication-and-cipher-issues-with-cisco-2960-switches&#34;&gt;11. Resolving SSH Authentication and Cipher Issues with Cisco 2960 Switches&lt;/h2&gt;
&lt;p&gt;When configuring SSH on a Cisco 2960 switch, you may encounter issues with SSH authentication or ciphers. These issues are typically due to compatibility mismatches between the SSH client and the ciphers or algorithms supported by the switch. Modern SSH clients often default to more secure encryption standards, which may not align with the older ciphers supported by the Cisco 2960 switch.&lt;/p&gt;
&lt;p&gt;To resolve these compatibility issues, you need to adjust the configuration of your SSH client by adding specific parameters to your &lt;code&gt;~/.ssh/config&lt;/code&gt; file.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;required-configuration-for-sshconfig&#34;&gt;Required Configuration for &lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The following configuration needs to be added to your SSH client’s configuration file to ensure compatibility with the Cisco 2960 switch:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host &amp;lt;cisco ip&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Ciphers +aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  KexAlgorithms +diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  HostkeyAlgorithms +ssh-rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-connecting-with-ssh&#34;&gt;12. Connecting with SSH&lt;/h2&gt;
&lt;p&gt;Now connect with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh -l &amp;lt;username&amp;gt; &amp;lt;ip address switch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Tuxedo and Arch</title>
      <link>http://localhost:1313/posts/tuxedo/</link>
      <pubDate>Fri, 29 Nov 2024 15:02:49 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/tuxedo/</guid>
      <description>&lt;h1 id=&#34;from-macos-to-arch-linux-embracing-freedom-on-a-tuxedo-laptop&#34;&gt;From macOS to Arch Linux: Embracing Freedom on a Tuxedo Laptop&lt;/h1&gt;
&lt;p&gt;For years, I lived in Apple’s walled garden, wielding a MacBook with macOS like a good digital citizen. It was elegant, polished, and maddeningly limiting. Over time, my frustrations grew louder than the chime on startup. I didn’t want a machine that worked &lt;em&gt;despite&lt;/em&gt; me; I wanted one that worked &lt;em&gt;with&lt;/em&gt; me. Enter the Tuxedo laptop and Arch Linux—a duo that let me reclaim control over my workflow, align with my love for Suckless software, and embrace a keyboard-driven existence.&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;from-macos-to-arch-linux-embracing-freedom-on-a-tuxedo-laptop&#34;&gt;From macOS to Arch Linux: Embracing Freedom on a Tuxedo Laptop&lt;/h1&gt;
&lt;p&gt;For years, I lived in Apple’s walled garden, wielding a MacBook with macOS like a good digital citizen. It was elegant, polished, and maddeningly limiting. Over time, my frustrations grew louder than the chime on startup. I didn’t want a machine that worked &lt;em&gt;despite&lt;/em&gt; me; I wanted one that worked &lt;em&gt;with&lt;/em&gt; me. Enter the Tuxedo laptop and Arch Linux—a duo that let me reclaim control over my workflow, align with my love for Suckless software, and embrace a keyboard-driven existence.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;why-i-left-macos&#34;&gt;Why I Left macOS&lt;/h2&gt;
&lt;p&gt;At first glance, macOS seems like the perfect operating system for someone who appreciates minimalism and efficiency. It’s polished to a mirror shine, but that’s the problem: &lt;strong&gt;it’s a mirror you can’t scratch.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;heres-what-drove-me-away&#34;&gt;Here’s what drove me away:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Mouse-First Mentality&lt;/strong&gt;: macOS loves its trackpads, gestures, and a UX that screams &amp;ldquo;click here.&amp;rdquo; For someone like me—who thrives in a keyboard-driven workflow—this was friction I didn’t need.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Locked-In Ecosystem&lt;/strong&gt;: macOS doesn’t just assume control; it demands it. Apps behave how Apple wants, not how &lt;em&gt;I&lt;/em&gt; want.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Heavyweight Software&lt;/strong&gt;: Every macOS update seemed to bring more bloat. I didn’t want animations and notifications; I wanted lean, efficient performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I needed an operating system that let me strip away the unnecessary, tailor the essential, and move at the speed of thought.&lt;/p&gt;
&lt;h2 id=&#34;httpswwwtecmintcomwp-contentuploads201904ratpoison-window-managerjpeg&#34;&gt;&lt;img src=&#34;https://www.tecmint.com/wp-content/uploads/2019/04/Ratpoison-Window-Manager.jpeg&#34; alt=&#34;&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;why-arch-and-why-tuxedo&#34;&gt;Why Arch and Why Tuxedo?&lt;/h2&gt;
&lt;p&gt;I’ve been an &lt;strong&gt;Arch Linux&lt;/strong&gt; user for years, so the operating system choice was a no-brainer. It’s fast, endlessly customizable, and stays out of your way. What changed was my hardware.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Tuxedo Laptop&lt;/strong&gt; caught my attention for its focus on Linux-first hardware. No more battling EFI issues or wondering if my Wi-Fi card would cooperate. With the Tuxedo, I could focus on what mattered: &lt;strong&gt;building my ideal computing environment.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;what-i-value-in-a-machine&#34;&gt;What I Value in a Machine&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Linux at Its Core&lt;/strong&gt;: No surprises here. The hardware is designed to play nice with Linux, making setup and long-term maintenance effortless.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lightweight Hardware, Heavyweight Power&lt;/strong&gt;: Whether coding, gaming, or configuring yet another dotfile, the Tuxedo InfinityBook strikes the perfect balance.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;httpswwwtuxedocomputerscomstore_files1imagesproduct_imagesextrapulse14-gen4_herobannerjpg&#34;&gt;&lt;img src=&#34;https://www.tuxedocomputers.com/store_files/1/images/product_images/extra/pulse14-gen4_herobanner.jpg&#34; alt=&#34;&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;why-tiling-window-managers&#34;&gt;Why Tiling Window Managers?&lt;/h2&gt;
&lt;p&gt;If there’s a polar opposite to macOS’s glossy, window-dragging interface, it’s a tiling window manager. I’ve always been drawn to the simplicity and efficiency of tools like &lt;strong&gt;dwm&lt;/strong&gt; and &lt;strong&gt;bspwm&lt;/strong&gt;. Why? Because they do &lt;em&gt;exactly&lt;/em&gt; what I want and nothing more.&lt;/p&gt;
&lt;h3 id=&#34;the-tiling-philosophy&#34;&gt;The Tiling Philosophy&lt;/h3&gt;
&lt;p&gt;A tiling window manager is a statement: &lt;strong&gt;My workflow isn’t an afterthought. It’s the foundation.&lt;/strong&gt; Everything is organized, spatially consistent, and instantly accessible. With a few keystrokes, I can summon, move, or close windows without ever reaching for the mouse.&lt;/p&gt;
&lt;p&gt;It’s not just about speed; it’s about &lt;strong&gt;autonomy.&lt;/strong&gt; In the tiling world, &lt;em&gt;you&lt;/em&gt; decide the layout. Contrast this with macOS’s love affair with floating windows, where apps constantly demand to be resized and repositioned.&lt;/p&gt;
&lt;h2 id=&#34;httpsrepository-imagesgithubusercontentcom405523738035273b6-276a-4837-a94c-1ebaf4d4c8e8&#34;&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/405523738/035273b6-276a-4837-a94c-1ebaf4d4c8e8&#34; alt=&#34;&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;suckless-software-and-minimalism&#34;&gt;Suckless Software and Minimalism&lt;/h2&gt;
&lt;p&gt;For someone like me—who loves Suckless software—the shift away from macOS felt inevitable. Tools like &lt;strong&gt;dwm&lt;/strong&gt;, &lt;strong&gt;st&lt;/strong&gt;, and &lt;strong&gt;dmenu&lt;/strong&gt; embody everything I want in software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minimalist Code&lt;/strong&gt;: If you can’t read and understand the source, is it even yours? Suckless software is lean, hackable, and designed to be configured at the source level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keyboard-Driven Workflows&lt;/strong&gt;: Everything is a keystroke away. The mouse? It’s just another dust collector on my desk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Philosophical Alignment&lt;/strong&gt;: These tools don’t try to be everything for everyone. They do one thing exceptionally well, and they let &lt;em&gt;you&lt;/em&gt; handle the rest.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moving to a Tuxedo laptop running Arch allowed me to double down on these principles. My setup is now a reflection of &lt;em&gt;me&lt;/em&gt;, not the whims of a corporation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;living-the-dream-my-keyboard-centric-workflow&#34;&gt;Living the Dream: My Keyboard-Centric Workflow&lt;/h2&gt;
&lt;p&gt;Switching to a Tuxedo laptop running Arch wasn’t just a hardware upgrade; it was a lifestyle upgrade. Every piece of my workflow is optimized for efficiency:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Neovim for Coding&lt;/strong&gt;: With Lua configurations and plugins tailored to my needs, Neovim is the ultimate development environment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dwm for Window Management&lt;/strong&gt;: No unnecessary UI elements, no wasted pixels—just pure productivity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom Keybindings&lt;/strong&gt;: Everything from launching applications to controlling media happens via the keyboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-Hosted Tools&lt;/strong&gt;: From running containers to managing Kubernetes clusters, my Tuxedo laptop is the command center for all my projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This setup makes macOS feel like a toy in comparison. It’s not just faster; it’s smarter. It works how &lt;em&gt;I&lt;/em&gt; think, not how a UX designer thinks I should.&lt;/p&gt;
&lt;h2 id=&#34;httpsireddit3spdyw6d3wca1png&#34;&gt;&lt;img src=&#34;https://i.redd.it/3spdyw6d3wca1.png&#34; alt=&#34;&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;Switching from macOS to Arch Linux on a Tuxedo laptop wasn’t just a change in operating systems. It was a declaration of independence. I left behind the polish of macOS for the raw, unfiltered power of Linux—a decision that aligns with my values of simplicity, freedom, and customization.&lt;/p&gt;
&lt;p&gt;If you’re tired of being told how to work and ready to build a system that works &lt;em&gt;for&lt;/em&gt; you, stop hesitating. &lt;strong&gt;Make the leap.&lt;/strong&gt; Arch Linux and tiling window managers will change the way you think about computing.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Cloudflare Tunnel and containers</title>
      <link>http://localhost:1313/posts/2ndpost/</link>
      <pubDate>Thu, 28 Nov 2024 21:05:37 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/2ndpost/</guid>
      <description>&lt;p&gt;Securing access to internally hosted applications is crucial, especially for applications that shouldn’t be directly exposed to the internet. Cloudflare Tunnel provides a secure, encrypted connection by creating an outbound tunnel from your network to Cloudflare’s infrastructure, eliminating the need to open external ports. With Docker Compose, setting up a Cloudflare Tunnel becomes straightforward and manageable within a few configuration steps.&lt;/p&gt;
&lt;p&gt;In this guide, we’ll walk through setting up Cloudflare Tunnel, configuring it with Docker Compose, and securing sensitive information using environment variables.&lt;/p&gt;</description>
      <content>&lt;p&gt;Securing access to internally hosted applications is crucial, especially for applications that shouldn’t be directly exposed to the internet. Cloudflare Tunnel provides a secure, encrypted connection by creating an outbound tunnel from your network to Cloudflare’s infrastructure, eliminating the need to open external ports. With Docker Compose, setting up a Cloudflare Tunnel becomes straightforward and manageable within a few configuration steps.&lt;/p&gt;
&lt;p&gt;In this guide, we’ll walk through setting up Cloudflare Tunnel, configuring it with Docker Compose, and securing sensitive information using environment variables.&lt;/p&gt;
&lt;h2 id=&#34;step-1-set-up-your-cloudflare-tunnel&#34;&gt;Step 1: Set Up Your Cloudflare Tunnel&lt;/h2&gt;
&lt;p&gt;Create the Tunnel
Log in to your Cloudflare account, then go to Zero Trust &amp;gt; Access &amp;gt; Tunnels.
Click Create a Tunnel and provide a unique name for your tunnel. Naming the tunnel after your application or project can make it easier to manage.&lt;/p&gt;
&lt;p&gt;Find the Tunnel Token
After creating the tunnel, Cloudflare generates a unique Tunnel Token. This token is required for authorizing the cloudflared service (Cloudflare’s connector) to establish a secure connection between Cloudflare and your application.
The token can be found on the Tunnel Details page under Credentials. Copy this token; you’ll need it to set up the tunnel securely in Docker Compose.&lt;/p&gt;
&lt;h2 id=&#34;step-2-securely-store-the-tunnel-token&#34;&gt;Step 2: Securely Store the Tunnel Token&lt;/h2&gt;
&lt;p&gt;To prevent exposing sensitive information within your docker-compose.yaml file, store the TUNNEL_TOKEN in a .env file. Using environment variables in Docker Compose allows for a cleaner and more secure configuration, especially if you share or version your configuration files.&lt;/p&gt;
&lt;p&gt;Create a .env file
In the root directory of your project (where your Docker Compose file is located), create a new file named .env.&lt;/p&gt;
&lt;p&gt;Add the Tunnel Token
Open the .env file and add your Tunnel Token like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TUNNEL_TOKEN=your_cloudflare_tunnel_token_here
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Replace your_cloudflare_tunnel_token_here with the actual token you copied from the Tunnel Details page.&lt;/p&gt;
&lt;p&gt;This approach keeps your Docker Compose file free of sensitive data, as Docker Compose will automatically load variables from the .env file.&lt;/p&gt;
&lt;h2 id=&#34;step-3-configure-docker-compose-with-cloudflare-tunnel&#34;&gt;Step 3: Configure Docker Compose with Cloudflare Tunnel&lt;/h2&gt;
&lt;p&gt;With the token securely stored, you’re ready to configure the Docker Compose file. The following example docker-compose.yaml file includes both your application and the cloudflared tunnel service.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;services:
  app:
    image: your_app_image:latest  # Replace with your application’s Docker image
    ports:
      - &amp;#34;8080:8080&amp;#34;  # Map the application port

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    restart: unless-stopped
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;explanation-of-the-configuration&#34;&gt;Explanation of the Configuration:&lt;/h3&gt;
&lt;p&gt;App Service: This service represents your internal application. Replace your_app_image with the Docker image for your app. Adjust the ports according to your application’s setup.&lt;/p&gt;
&lt;p&gt;Cloudflared Service: The cloudflared service uses the official Cloudflare Docker image. The command tunnel &amp;ndash;no-autoupdate run instructs Cloudflare to start and maintain the tunnel connection. The TUNNEL_TOKEN environment variable retrieves the token from the .env file, authorizing the secure tunnel.&lt;/p&gt;
&lt;p&gt;Restart Policy: Setting restart: unless-stopped ensures the tunnel service automatically restarts if it stops unexpectedly, maintaining consistent connectivity.&lt;/p&gt;
&lt;h2 id=&#34;step-4-run-docker-compose&#34;&gt;Step 4: Run Docker Compose&lt;/h2&gt;
&lt;p&gt;With your Docker Compose file configured, it’s time to deploy your application along with the Cloudflare Tunnel.&lt;/p&gt;
&lt;p&gt;Start Docker Compose
Run the following command to start all services:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The -d flag runs the services in detached mode, allowing them to continue running in the background.&lt;/p&gt;
&lt;p&gt;Verify the Tunnel Connection
Open your Cloudflare dashboard, go to Zero Trust &amp;gt; Access &amp;gt; Tunnels, and you should see your tunnel listed as active.
You can now access your internal application through the secure Cloudflare Tunnel, with Cloudflare handling all HTTPS traffic and network security.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Benefits of Using Cloudflare Tunnel with Docker Compose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improved Security: By eliminating open ports and using a secure outbound tunnel, Cloudflare Tunnel reduces your application’s exposure and minimizes security risks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic HTTPS: Cloudflare automatically applies HTTPS to all traffic routed through the tunnel, ensuring end-to-end encryption without extra configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simplicity: Using Docker Compose to manage both your application and the tunnel service in a single configuration file simplifies deployment and maintenance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;Integrating Cloudflare Tunnel with Docker Compose provides a robust solution for securely accessing internal applications. By leveraging a .env file to manage the Tunnel Token, you maintain security best practices while keeping your configuration modular and manageable. This setup offers a streamlined approach to secure application access and simplifies the configuration needed to protect sensitive resources behind a Cloudflare-managed tunnel.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Self Hosting and You</title>
      <link>http://localhost:1313/posts/firstpost/</link>
      <pubDate>Thu, 28 Nov 2024 18:24:18 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/firstpost/</guid>
      <description>&lt;p&gt;In an age where technology touches nearly every part of our lives, data privacy and digital autonomy have become essential considerations. For businesses, individuals, and IT professionals alike, self-hosting applications—running software on personal or organizational servers instead of relying on third-party services—offers a unique solution. Not only does self-hosting enhance data security, but it also fosters valuable learning opportunities for those in IT, from basic troubleshooting to advanced system management.&lt;/p&gt;</description>
      <content>&lt;p&gt;In an age where technology touches nearly every part of our lives, data privacy and digital autonomy have become essential considerations. For businesses, individuals, and IT professionals alike, self-hosting applications—running software on personal or organizational servers instead of relying on third-party services—offers a unique solution. Not only does self-hosting enhance data security, but it also fosters valuable learning opportunities for those in IT, from basic troubleshooting to advanced system management.&lt;/p&gt;
&lt;p&gt;In this post, we’ll explore why self-hosting is important, its benefits in protecting data, and the skill-building potential it brings for IT professionals. We’ll look at the value of digital autonomy, the privacy advantages, and how self-hosting applications empower IT professionals to expand their knowledge.&lt;/p&gt;
&lt;h2 id=&#34;introduction-to-self-hosting-applications&#34;&gt;Introduction to Self-Hosting Applications&lt;/h2&gt;
&lt;p&gt;Self-hosting is the practice of setting up and running software applications on your own servers, as opposed to using third-party-hosted solutions. When self-hosting, you control where data is stored, how it is managed, and who has access to it. While this might sound technically complex, recent advancements in open-source software, cloud solutions, and hardware accessibility have made self-hosting viable for more users, even for those outside traditional IT roles.&lt;/p&gt;
&lt;p&gt;Some popular self-hosted applications include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nextcloud for file storage and sharing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Home Assistant for home automation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WordPress for website and blog hosting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bitwarden for password management&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These self-hosted solutions allow users to sidestep third-party applications, enhancing data privacy, minimizing security risks, and retaining direct control over the software.&lt;/p&gt;
&lt;h2 id=&#34;the-importance-of-data-privacy-and-control&#34;&gt;The Importance of Data Privacy and Control&lt;/h2&gt;
&lt;p&gt;One of the most compelling reasons to self-host applications is the enhanced data privacy and control it offers. In today’s digital landscape, data is constantly being collected, analyzed, and used for various purposes by third-party companies. By self-hosting, you reduce your dependency on external platforms and mitigate the risks associated with data breaches, unauthorized access, and third-party monetization of your data.&lt;/p&gt;
&lt;h3 id=&#34;understanding-the-risks-of-centralized-data-storage&#34;&gt;Understanding the Risks of Centralized Data Storage&lt;/h3&gt;
&lt;p&gt;Most applications and services today are hosted on centralized platforms owned by large corporations like Google, Amazon, and Microsoft. While these platforms offer convenience, they also pose significant privacy concerns:&lt;/p&gt;
&lt;p&gt;Data Monetization: Companies may analyze and sell user data to advertisers or other third parties, often without full transparency.&lt;/p&gt;
&lt;p&gt;Security Breaches: Centralized data storage makes user information vulnerable to hacking and data leaks.&lt;/p&gt;
&lt;p&gt;Data Retention Policies: Many companies have long data retention policies that may retain user data indefinitely, regardless of user consent.&lt;/p&gt;
&lt;p&gt;By self-hosting, users can avoid these risks by taking full control over data storage and access.&lt;/p&gt;
&lt;h3 id=&#34;compliance-with-privacy-regulations&#34;&gt;Compliance with Privacy Regulations&lt;/h3&gt;
&lt;p&gt;For businesses, privacy regulations like the GDPR (General Data Protection Regulation) and CCPA (California Consumer Privacy Act) demand strict data handling standards. Failure to comply can result in severe penalties. Self-hosting offers a reliable approach to regulatory compliance by allowing companies to:&lt;/p&gt;
&lt;p&gt;Define clear data governance policies&lt;/p&gt;
&lt;p&gt;Implement stronger access controls&lt;/p&gt;
&lt;p&gt;Monitor data usage closely&lt;/p&gt;
&lt;p&gt;This flexibility allows businesses to design their data management to align with regulatory requirements and customer expectations.&lt;/p&gt;
&lt;h2 id=&#34;self-hosting-and-it-skill-development-a-hands-on-learning-experience&#34;&gt;Self-Hosting and IT Skill Development: A Hands-On Learning Experience&lt;/h2&gt;
&lt;p&gt;Self-hosting applications presents a hands-on learning experience, offering IT professionals and enthusiasts a way to expand their skills in a real-world context. Here are some of the key skills self-hosting can help you develop:&lt;/p&gt;
&lt;h3 id=&#34;system-administration-and-networking&#34;&gt;System Administration and Networking&lt;/h3&gt;
&lt;p&gt;Hosting an application on your own server requires a fundamental understanding of system administration and networking principles. You’ll need to:&lt;/p&gt;
&lt;p&gt;Set up and manage operating systems: Familiarity with Linux, Windows Server, or macOS can be beneficial, as these operating systems are common choices for self-hosted environments.&lt;/p&gt;
&lt;p&gt;Configure network settings: Skills in configuring static IP addresses, port forwarding, and firewall settings are essential to ensure your server is accessible and secure.&lt;/p&gt;
&lt;p&gt;Implement system monitoring and logging: To maintain a stable and reliable environment, learning how to monitor and log system activity is invaluable.&lt;/p&gt;
&lt;p&gt;These foundational skills are crucial for any IT professional and provide a stepping stone toward more complex topics like DevOps and cloud computing.&lt;/p&gt;
&lt;h3 id=&#34;security-practices-and-protocols&#34;&gt;Security Practices and Protocols&lt;/h3&gt;
&lt;p&gt;Self-hosting introduces a range of security challenges, giving IT professionals the opportunity to learn about and implement best practices. These may include:&lt;/p&gt;
&lt;p&gt;Firewalls and Access Control: Setting up firewalls and managing access permissions help protect your server and data from unauthorized access.&lt;/p&gt;
&lt;p&gt;Data Encryption: Learning how to encrypt data both in transit and at rest is key to safeguarding sensitive information.&lt;/p&gt;
&lt;p&gt;User Authentication and Authorization: Implementing secure login protocols, such as multi-factor authentication (MFA) and role-based access control (RBAC), strengthens overall security.&lt;/p&gt;
&lt;p&gt;These security practices mirror those in professional IT environments, helping you build practical, transferable skills.&lt;/p&gt;
&lt;h3 id=&#34;backup-and-disaster-recovery&#34;&gt;Backup and Disaster Recovery&lt;/h3&gt;
&lt;p&gt;Managing your own applications means you’re responsible for backup and disaster recovery planning. This skill is critical in IT, where data loss can have severe repercussions. Learning to set up automated backups, develop recovery plans, and test failover strategies prepares you for real-world IT challenges.&lt;/p&gt;
&lt;h3 id=&#34;containerization-and-virtualization&#34;&gt;Containerization and Virtualization&lt;/h3&gt;
&lt;p&gt;To simplify and standardize application deployments, many self-hosters leverage containerization and virtualization. Tools like Docker and Kubernetes allow you to run applications in isolated environments, reducing compatibility issues and simplifying maintenance.&lt;/p&gt;
&lt;p&gt;Docker: Familiarity with Docker enables you to deploy applications in portable containers, making it easy to move applications across environments.&lt;/p&gt;
&lt;p&gt;Kubernetes: For more complex setups, Kubernetes helps you manage containerized applications at scale, automating deployments, scaling, and maintenance.&lt;/p&gt;
&lt;p&gt;Working with these technologies provides an advantage in the job market, where containerization and cloud-native skills are increasingly in demand.&lt;/p&gt;
&lt;h2 id=&#34;practical-benefits-of-self-hosting-for-organizations-and-individuals&#34;&gt;Practical Benefits of Self-Hosting for Organizations and Individuals&lt;/h2&gt;
&lt;h3 id=&#34;cost-savings-and-resource-optimization&#34;&gt;Cost Savings and Resource Optimization&lt;/h3&gt;
&lt;p&gt;By self-hosting applications, companies and individuals can reduce the reliance on subscription-based SaaS (Software as a Service) products. While self-hosting has upfront costs for hardware, software, and maintenance, it often proves to be more economical over time. For organizations running multiple applications, the savings can be substantial.&lt;/p&gt;
&lt;h3 id=&#34;customization-and-flexibility&#34;&gt;Customization and Flexibility&lt;/h3&gt;
&lt;p&gt;Self-hosted solutions are often more flexible and customizable than their commercial counterparts. For instance, open-source software allows users to tailor the application’s code to fit specific needs or preferences, an option not typically available with SaaS products. This level of customization is particularly advantageous for businesses that require specialized features or integrations with other software.&lt;/p&gt;
&lt;h2 id=&#34;the-ethical-dimension-of-self-hosting-taking-ownership-of-your-digital-presence&#34;&gt;The Ethical Dimension of Self-Hosting: Taking Ownership of Your Digital Presence&lt;/h2&gt;
&lt;p&gt;Self-hosting aligns with the broader movement towards digital sovereignty and ethical computing, empowering users to take control of their data and minimize reliance on corporate tech giants. For individuals and companies invested in privacy and autonomy, self-hosting represents a commitment to ethical digital practices.&lt;/p&gt;
&lt;p&gt;Privacy and Autonomy: By taking ownership of your data, you avoid the risk of third-party data manipulation or surveillance.&lt;/p&gt;
&lt;p&gt;Transparency: With open-source, self-hosted solutions, users have insight into the code and can be assured that no hidden data tracking is occurring.&lt;/p&gt;
&lt;p&gt;Community and Collaboration: Many self-hosted applications are built on open-source projects, fostering a collaborative community where users contribute to development, report issues, and improve software for everyone.&lt;/p&gt;
&lt;h2 id=&#34;challenges-and-considerations-in-self-hosting&#34;&gt;Challenges and Considerations in Self-Hosting&lt;/h2&gt;
&lt;p&gt;While self-hosting offers significant advantages, it also comes with challenges that users should be prepared to address.&lt;/p&gt;
&lt;h3 id=&#34;technical-knowledge-requirement&#34;&gt;Technical Knowledge Requirement&lt;/h3&gt;
&lt;p&gt;Self-hosting requires a certain level of technical skill, which can be daunting for beginners. Setting up, securing, and maintaining servers can involve a learning curve. However, this challenge can be a growth opportunity, particularly for those in IT seeking to expand their technical skill set.&lt;/p&gt;
&lt;h3 id=&#34;maintenance-and-updates&#34;&gt;Maintenance and Updates&lt;/h3&gt;
&lt;p&gt;One of the biggest drawbacks of self-hosting is the responsibility for ongoing maintenance and updates. Unlike managed services, which handle these tasks for you, self-hosting requires regular attention to security patches, version updates, and troubleshooting.&lt;/p&gt;
&lt;h3 id=&#34;hardware-and-energy-costs&#34;&gt;Hardware and Energy Costs&lt;/h3&gt;
&lt;p&gt;Self-hosting requires reliable hardware and, in some cases, dedicated resources to keep the system running efficiently. Server equipment can be costly, and home-hosted solutions may lead to increased electricity bills.&lt;/p&gt;
&lt;p&gt;Despite these challenges, many users find the benefits of self-hosting—control, privacy, and learning opportunities—worth the investment.&lt;/p&gt;
&lt;h2 id=&#34;getting-started-with-self-hosting-a-step-by-step-guide&#34;&gt;Getting Started with Self-Hosting: A Step-by-Step Guide&lt;/h2&gt;
&lt;p&gt;For those ready to take the plunge, here’s a step-by-step guide to getting started with self-hosting.&lt;/p&gt;
&lt;h3 id=&#34;identify-your-needs&#34;&gt;Identify Your Needs&lt;/h3&gt;
&lt;p&gt;Determine which applications you want to host and why. This decision will influence your hardware, software, and setup.&lt;/p&gt;
&lt;h3 id=&#34;set-up-your-server&#34;&gt;Set Up Your Server&lt;/h3&gt;
&lt;p&gt;Decide whether to use a physical server or a virtual machine (VM). If you’re hosting at home, consider a small server or a Raspberry Pi for light applications.&lt;/p&gt;
&lt;h3 id=&#34;install-the-operating-system&#34;&gt;Install the Operating System&lt;/h3&gt;
&lt;p&gt;Linux distributions like Ubuntu Server or CentOS are popular choices for self-hosting due to their stability and extensive support.&lt;/p&gt;
&lt;h3 id=&#34;configure-network-and-security&#34;&gt;Configure Network and Security&lt;/h3&gt;
&lt;p&gt;Set up firewall rules, open necessary ports, and consider using VPNs for secure remote access.&lt;/p&gt;
&lt;h3 id=&#34;deploy-applications&#34;&gt;Deploy Applications&lt;/h3&gt;
&lt;p&gt;Install and configure applications based on your needs. You can use package managers or containerization platforms like Docker for easier deployment.&lt;/p&gt;
&lt;h3 id=&#34;regular-maintenance&#34;&gt;Regular Maintenance&lt;/h3&gt;
&lt;p&gt;Create a schedule for regular updates and backups to keep your system secure and operational.&lt;/p&gt;
&lt;h2 id=&#34;conclusion-embracing-self-hosting-for-digital-independence-and-it-growth&#34;&gt;Conclusion: Embracing Self-Hosting for Digital Independence and IT Growth&lt;/h2&gt;
&lt;p&gt;Self-hosting applications represent a powerful choice for individuals and organizations seeking greater control over their data and digital tools. In addition to the security and privacy benefits, self-hosting offers IT professionals an invaluable learning experience, expanding skills in system administration, security, and network management. Despite the challenges, the rewards of self-hosting—enhanced data protection, cost savings, and a greater sense of digital independence—make it a worthwhile endeavor.&lt;/p&gt;
&lt;p&gt;As technology continues to evolve, so too will the tools and best practices for self-hosting, making it more accessible and empowering for people at every level of technical expertise. Embracing self-hosting allows us to reclaim control of our digital lives, secure our personal data, and foster continuous learning in the ever-evolving field of IT.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
